{"version":3,"sources":["components/Text/style.js","components/Text/Text.js","components/Spinner/Spinner.js","components/CheckBox/style.js","components/CheckBox/CheckBox.js","components/UserList/style.js","components/UserList/UserList.js","hooks/usePeopleFetch.js","pages/Home/style.js","pages/Home/Home.js","pages/Favorites/style.js","components/FavoriteList/style.js","components/FavoriteList/FavoriteList.js","pages/Favorites/Favorites.js","theme/ThemeProvider.js","components/NavBar/NavBar.js","AppRouter.js","index.js"],"names":["Text","styled","div","size","bold","children","Typography","Spinner","color","thickness","variant","CircularProgress","CheckBox","isChecked","onChange","label","value","FormControlLabel","control","Checkbox","checked","UserList","List","User","UserInfo","UserPicture","img","SpinnerWrapper","IconButtonWrapper","isVisible","Filters","users","isLoading","useState","BR","AU","CA","DE","isCheckCountry","setCheckCountry","Brazil","Australia","Canada","Germany","country","count","setCount","hoveredUserId","setHoveredUserId","favorites","setFavorites","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","handleChange","handleMouseLeave","getVisible","user","includes","filter","location","map","index","onMouseEnter","handleMouseEnter","onClick","x","indexOf","slice","concat","handleMouseClick","onMouseLeave","src","picture","large","alt","name","title","first","last","email","street","number","city","IconButton","usePeopleFetch","setUsers","setIsLoading","fetchUsers","a","axios","get","response","data","results","Home","Content","Header","Favorites","FavoriteList","console","log","ThemeProvider","overrides","MuiTab","root","backgroundColor","theme","React","useMemo","createMuiTheme","palette","type","primary","main","error","CssBaseline","NavBar","props","setValue","history","useHistory","AppBar","position","style","top","Tabs","_e","newValue","aria-label","indicatorColor","textColor","Tab","push","AppRouter","exact","path","component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.0d1f7093.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Text = styled.div`\r\n  font-size: ${({ size }) => size};\r\n  font-weight: ${({ bold }) => (bold ? \"700\" : \"400\")};\r\n`;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport * as S from \"./style\";\r\n\r\nconst Text = ({ size = \"14px\", children, bold }) => {\r\n  return (\r\n    <Typography>\r\n      <S.Text size={size} bold={bold}>\r\n        {children}\r\n      </S.Text>\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default Text;\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst Spinner = ({ size, color, thickness, variant }) => {\r\n  return (\r\n    <CircularProgress size={size} color={color} thickness={thickness} variant={variant} />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CheckBox = styled.div``;\r\n","import React from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport * as S from \"./style\";\r\n\r\nconst CheckBox = ({ isChecked, onChange, label, value }) => {\r\n  const handleChange = () => {\r\n     onChange(value);\r\n  };\r\n  \r\n  return (\r\n    <S.CheckBox>\r\n      <FormControlLabel\r\n        control={<Checkbox checked={isChecked} onChange={handleChange} color=\"primary\" />}\r\n        label={label}\r\n      />\r\n    </S.CheckBox>\r\n  );\r\n};\r\n\r\nexport default CheckBox;\r\n","import styled from \"styled-components\";\r\n\r\nexport const UserList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n  width: 500px;\r\n  height: calc(100vh - 270px);\r\n  margin-block-start: 30px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const User = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-height: 128px;\r\n  gap: 2px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const UserPicture = styled.img`\r\n  border-radius: 45%;\r\n`;\r\n\r\nexport const SpinnerWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\r\n  transition: opacity 0.2s ease-in-out;\r\n`;\r\n\r\nexport const Filters = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  & > * {\r\n    margin-inline-end: 8px;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport Spinner from \"components/Spinner\";\r\nimport CheckBox from \"components/CheckBox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport * as S from \"./style\";\r\n\r\n\r\nconst UserList = ({ users, isLoading }) => {\r\n\r\n  const [isCheckCountry, setCheckCountry] = useState({BR: false, AU: false,CA: false, DE: false});\r\n  const [country, setCountry] = useState({Brazil: \"BR\", Australia: \"AU\", Canada: \"CA\", Germany: \"DE\"});\r\n  const [count,setCount]=useState(0);\r\n\r\n  const [hoveredUserId, setHoveredUserId] = useState();\r\n  const [favorites, setFavorites] = useState([]);\r\n  \r\n  useEffect(() => { \r\n    setFavorites(JSON.parse(localStorage.getItem(\"favorites\")))\r\n  },[]);\r\n    \r\n  useEffect(() => { \r\n    localStorage.setItem(\"favorites\",JSON.stringify(favorites))} ,[favorites]);\r\n\r\n\r\n  const handleChange =(value) =>\r\n  {\r\n      if(isCheckCountry[value])\r\n        setCount(count-1);\r\n      else\r\n        setCount(count+1);\r\n      setCheckCountry({...isCheckCountry, [value]: !isCheckCountry[value]});\r\n  }; \r\n   \r\n    const getUser=(user)=>\r\n    {\r\n      if(count===0)\r\n        return true;\r\n      if(isCheckCountry[country[user.location.country]]== true )\r\n        return true;\r\n      return false;\r\n    };\r\n\r\n\r\n  const handleMouseEnter = (user) => {\r\n    setHoveredUserId(user);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredUserId();\r\n  };\r\n\r\n  const handleMouseClick = (user) => {\r\n    if(favorites.includes(user))\r\n   {\r\n      let x = favorites.indexOf(user); \r\n      setFavorites(favorites.slice(0,x).concat(favorites.slice(x+1)));\r\n    }\r\n    else\r\n    {\r\n      setFavorites([...favorites, user]);\r\n      //localStorage.clear();\r\n    }\r\n  };\r\n\r\n  const getVisible=(user)=>\r\n  {\r\n    if(user === hoveredUserId || favorites.includes(user))\r\n      return true;\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <S.UserList>\r\n      <S.Filters>\r\n        <CheckBox value=\"BR\" label=\"Brazil\" onChange={handleChange} isChecked={isCheckCountry.BR} />\r\n        <CheckBox value=\"AU\" label=\"Australia\" onChange={handleChange} isChecked={isCheckCountry.AU}/>\r\n        <CheckBox value=\"CA\" label=\"Canada\" onChange={handleChange} isChecked={isCheckCountry.CA}/>\r\n        <CheckBox value=\"DE\" label=\"Germany\" onChange={handleChange} isChecked={isCheckCountry.DE}/>\r\n      </S.Filters>\r\n      <S.List>\r\n        {users.filter(getUser).map((user, index) => {\r\n            return (\r\n              <S.User\r\n                key={index}\r\n                onMouseEnter={() => handleMouseEnter(user)}\r\n                onClick={( )=> handleMouseClick(user)}\r\n                onMouseLeave={handleMouseLeave}\r\n              >\r\n                <S.UserPicture src={user?.picture.large} alt=\"\" />\r\n                <S.UserInfo>\r\n                  <Text size=\"22px\" bold>\r\n                    {user?.name.title} {user?.name.first} {user?.name.last}\r\n                  </Text>\r\n                  <Text size=\"14px\">{user?.email}</Text>\r\n                  <Text size=\"14px\">\r\n                    {user?.location.street.number} {user?.location.street.name}\r\n                  </Text>\r\n                  <Text size=\"14px\">\r\n                    {user?.location.city} {user?.location.country}\r\n                  </Text>\r\n                </S.UserInfo>\r\n                <S.IconButtonWrapper isVisible={getVisible(user)}>\r\n                  <IconButton>\r\n                    <FavoriteIcon color=\"error\" />\r\n                  </IconButton>\r\n                </S.IconButtonWrapper>\r\n              </S.User>\r\n              \r\n            );\r\n            })}\r\n        {isLoading && (\r\n          <S.SpinnerWrapper>\r\n            <Spinner color=\"primary\" size=\"45px\" thickness={6} variant=\"indeterminate\" />\r\n          </S.SpinnerWrapper>\r\n        )}\r\n      </S.List>\r\n    </S.UserList>\r\n  );\r\n};\r\n\r\nexport default UserList;","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const usePeopleFetch = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  async function fetchUsers() {\r\n    setIsLoading(true);\r\n    const response = await axios.get(`https://randomuser.me/api/?results=25&page=1`);\r\n    setIsLoading(false);\r\n    setUsers(response.data.results);\r\n  }\r\n\r\n  return { users, isLoading, fetchUsers };\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Home = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n  max-width: 400px;\r\n  width: 100%;\r\n`;\r\n","import React from \"react\";\r\nimport Text from \"components/Text\";\r\nimport UserList from \"components/UserList\";\r\nimport { usePeopleFetch } from \"hooks\";\r\nimport * as S from \"./style\";\r\n\r\nconst Home = () => {\r\n  const { users, isLoading } = usePeopleFetch();\r\n\r\n  return (\r\n    <S.Home>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            PplFinder\r\n          </Text>\r\n        </S.Header>\r\n        <UserList users={users} isLoading={isLoading} />\r\n      </S.Content>\r\n    </S.Home>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Favorites = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n  max-width: 400px;\r\n  width: 100%;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const FavoriteList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n  width: 500px;\r\n  height: calc(100vh - 270px);\r\n  margin-block-start: 30px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const User = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-height: 128px;\r\n  gap: 2px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const UserPicture = styled.img`\r\n  border-radius: 45%;\r\n`;\r\n\r\nexport const SpinnerWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\r\n  transition: opacity 0.2s ease-in-out;\r\n`;\r\n\r\nexport const Filters = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  & > * {\r\n    margin-inline-end: 8px;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport Spinner from \"components/Spinner\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport * as S from \"./style\";\r\n\r\n\r\nconst FavoriteList = ({ isLoading }) => {\r\n\r\n  const [hoveredUserId, setHoveredUserId] = useState();\r\n  const [favorites, setFavorites] = useState([]);\r\n  \r\n  useEffect(() => { \r\n    setFavorites(JSON.parse(localStorage.getItem(\"favorites\")))\r\n    console.log(JSON.parse(localStorage.getItem(\"favorites\"))) \r\n  },[]);\r\n  \r\n  useEffect(() => {\r\n    //localStorage.clear();\r\n    localStorage.setItem(\"favorites\",JSON.stringify(favorites)) } ,[favorites]);\r\n\r\n  const handleMouseEnter = (user) => {\r\n    setHoveredUserId(user);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredUserId();\r\n  };\r\n\r\n  const handleMouseClick = (user) => {\r\n    if(favorites.includes(user))\r\n   {\r\n      let x = favorites.indexOf(user); \r\n      setFavorites(favorites.slice(0,x).concat(favorites.slice(x+1)));\r\n    }\r\n    else\r\n      setFavorites([...favorites, user]);\r\n  };\r\n\r\n  const getVisible=(user)=>\r\n  {\r\n    if(user === hoveredUserId || favorites.includes(user))\r\n      return true;\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <S.FavoriteList>\r\n      <S.List>\r\n        {favorites.map((user, index) => {\r\n            return (\r\n              <S.User\r\n                key={index}\r\n                onMouseEnter={() => handleMouseEnter(user)}\r\n                onClick={( )=> handleMouseClick(user)}\r\n                onMouseLeave={handleMouseLeave}\r\n              >\r\n                <S.UserPicture src={user?.picture.large} alt=\"\" />\r\n                <S.UserInfo>\r\n                  <Text size=\"22px\" bold>\r\n                    {user?.name.title} {user?.name.first} {user?.name.last}\r\n                  </Text>\r\n                  <Text size=\"14px\">{user?.email}</Text>\r\n                  <Text size=\"14px\">\r\n                    {user?.location.street.number} {user?.location.street.name}\r\n                  </Text>\r\n                  <Text size=\"14px\">\r\n                    {user?.location.city} {user?.location.country}\r\n                  </Text>\r\n                </S.UserInfo>\r\n                <S.IconButtonWrapper isVisible={getVisible(user)}>\r\n                  <IconButton>\r\n                    <FavoriteIcon color=\"error\" />\r\n                  </IconButton>\r\n                </S.IconButtonWrapper>\r\n              </S.User>\r\n              \r\n            );\r\n            })}\r\n        {isLoading && (\r\n          <S.SpinnerWrapper>\r\n            <Spinner color=\"primary\" size=\"45px\" thickness={6} variant=\"indeterminate\" />\r\n          </S.SpinnerWrapper>\r\n        )}\r\n      </S.List>\r\n    </S.FavoriteList>\r\n  );\r\n};\r\n\r\nexport default FavoriteList;","//import React from \"react\";\r\nimport Text from \"components/Text\";\r\nimport { usePeopleFetch } from \"hooks\";\r\nimport * as S from \"./style\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport FavoriteList from \"components/FavoriteList\";\r\n\r\n\r\nconst Favorites = () => {\r\n  const { isLoading } = usePeopleFetch();\r\n\r\n  return (\r\n    <S.Favorites>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            Favorites\r\n          </Text>\r\n        </S.Header>\r\n        <FavoriteList  isLoading={isLoading} />\r\n      </S.Content>\r\n    </S.Favorites>\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n","import React from \"react\";\r\nimport { createMuiTheme, ThemeProvider as Provider } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const overrides = {\r\n    MuiTab: {\r\n      root: {\r\n        backgroundColor: \"#303030\",\r\n      },\r\n    },\r\n  };\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createMuiTheme({\r\n        overrides,\r\n        palette: {\r\n          type: \"dark\",\r\n          primary: {\r\n            main: \"#84ffff\",\r\n          },\r\n          error: {\r\n            main: \"#f06292\",\r\n          },\r\n        },\r\n      }),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Provider theme={theme}>\r\n      <CssBaseline />\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeProvider;\r\n","import React, { useState } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";  \r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst NavBar = (props) => {\r\n  const [value, setValue] = useState(0);\r\n  const history = useHistory();\r\n\r\n  \r\n  const handleChange = (_e, newValue) => {\r\n    setValue(newValue);\r\n    console.log(newValue)\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <AppBar position=\"static\" color=\"transparent\" style={{ position: \"fixed\", top: 0 }}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        aria-label=\"Navigation\"\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n      >\r\n        <Tab label=\"Home\" index={0}  onClick={()=>{history.push(\"/\")}}/>\r\n        <Tab label=\"Favorites\" index={1} onClick={()=>{history.push(\"/Favorites\")}}/>\r\n      </Tabs>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Home } from \"pages\";\r\nimport { Favorites } from \"pages\";\r\n\r\nimport { ThemeProvider } from \"theme\";\r\nimport NavBar from \"components/NavBar\";\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <ThemeProvider>\r\n      <Router>\r\n        <NavBar />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route path=\"/Favorites\" component={Favorites} />\r\n        </Switch>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport AppRouter from \"AppRouter\";\r\n\r\nReactDOM.render(<AppRouter />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}